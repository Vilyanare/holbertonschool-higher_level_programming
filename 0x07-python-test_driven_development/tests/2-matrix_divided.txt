The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

Test file for ``matrix_divided`` function:
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Tests:

Check for standard input/output:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]

    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

Check if divisor is 0:

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Check invalid data types:

    >>> matrix_divided(matrix, 'a')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix_divided('a', 1)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided(7, 1)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([1, 2, 3], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2 , 3], 1], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3], [4, 5, 'a']], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check different sized matrix rows:

    >>> matrix_divided([[1, 2, 3], [4, 5]], 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
